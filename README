# ðŸŒ¿ Cannadiary  
*Grow-diary in a single HTML file â€” 35 plants, dashboards, photos, offline-first.*

![screenshot placeholder](docs/screenshot.png)

## âœ¨ Features
- **Plant table** with editable trait scores & live thumbnails  
- **Bulk & single photo uploads** (per-plant, client-side compressed)  
- **Interactive timeline** (seed â†’ cure, zoomable)  
- **Freeform journal canvas** â€” drag-n-drop sticky notes & images  
- **Milestones & care events** scheduler (topping, LST, wateringâ€¦)  
- **KPI dashboard** (Vigor Index, Structural Integrity, Top performer)  
- **All data stored in `localStorage`** â†’ works fully **offline**  
- Pure **HTML + Tailwind + Chart.js** â€” zero build, zero backend

## ðŸš€ Quick start
```bash
git clone https://github.com/deefunxion/cannadiary.git
cd cannadiary
# just open index.html in your browser â€“ or â€“
npx serve .
Or deploy to GitHub Pages:
Settings â†’ Pages â†’ Source: main / (root) and youâ€™re live.

ðŸ–¼ Bulk photo uploader
Drop a folder of 1c.jpg â€¦ 35c.jpg (or 1f.jpg â€¦ 35f.jpg) and each file
lands in the matching plantâ€™s gallery â€” instant session logging.

ðŸ›  Contributing
Fork â†’ create feature branch (feat/bulk-uploader)

Commit with Conventional Commits

Open a PR & describe the grower-side benefit

Respect existing code-style (vanilla JS, Tailwind utility classes)

Roadmap
 Stats / heat-map dashboard

 PWA + GitHub Gist backup

 Sensor bridge (ESP32 â†’ WebSerial)
